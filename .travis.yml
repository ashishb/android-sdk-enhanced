# https://stackoverflow.com/questions/27644586/how-to-set-up-travis-ci-with-multiple-languages
matrix:
  include:
    - name: Lint check code
      language: python
      sudo: false
      python:
        - 3.6
      install:
        - pip install -r requirements.txt
        - pip install pylint
      script:
        - ./tests/lint_check_python3.sh

    - name: Test doctor against OpenJDK9
      language: Java  # OpenJDK9 testing (Android language on Travis does not support JDK9)
      python:
        - 3.7
      sudo: required  # For pip installation, otherwise, pip install fails.
      jdk: oraclejdk9
      before_script:
        - sudo apt-get install python3-pip
        - pip3 install --user -r requirements.txt
        - jdk_switcher use oraclejdk9
      script:
        # Assert failure
        - python3 src/main.py doctor --verbose && exit 1 || exit 0

    - name: Test doctor against JDK8
      language: android  # Doctor testing
      python:
        - 3.7
      sudo: required  # For pip installation, otherwise, pip install fails.
      jdk: oraclejdk8
      before_script:
        - sudo apt-get install python3-pip
        - pip3 install --user -r requirements.txt
        - jdk_switcher use oraclejdk8
      script:
        - python3 src/main.py install basic packages --verbose
        - python3 src/main.py doctor --verbose

    - name: Test list packages commands on JDK8
      language: android  # list testing
      python:
        - 3.7
      sudo: required  # For pip installation, otherwise, pip install fails.
      jdk: oraclejdk8
      before_script:
        - sudo apt-get install python3-pip
        - pip3 install --user -r requirements.txt
        - jdk_switcher use oraclejdk8
      script:
        - python3 src/main.py list api versions --arm
        - python3 src/main.py list build tools
        - python3 src/main.py list installed packages
        - python3 src/main.py list other packages

    # Install testing is slow, split it into multiple
    - name: Test install API 4 and API 14 on JDK8
      language: android
      python:
        - 3.7
      sudo: required  # For pip installation, otherwise, pip install fails.
      jdk: oraclejdk8
      before_script:
        - sudo apt-get install python3-pip
        - pip3 install --user -r requirements.txt
        - jdk_switcher use oraclejdk8
      script:
        - python3 src/main.py install version 4 --verbose
        - python3 src/main.py install version 14 --arm
        - python3 src/main.py install version 27 --x86
        - python3 src/main.py list installed packages | grep android-4
        - python3 src/main.py list installed packages | grep android-14
        # TODO(ashishb): Make this work, for now, it just hangs.
        # - python3 src/main.py update all --verbose

    - name: Test install API 27 on JDK8
      language: android
      python:
        - 3.7
      sudo: required  # For pip installation, otherwise, pip install fails.
      jdk: oraclejdk8
      before_script:
        - sudo apt-get install python3-pip
        - pip3 install --user -r requirements.txt
        - jdk_switcher use oraclejdk8
      script:
        - python3 src/main.py install version 27 --x86
        - python3 src/main.py list installed packages | grep android-27

    - name: Test install API 28 on JDK8
      language: android
      python:
        - 3.7
      sudo: required  # For pip installation, otherwise, pip install fails.
      jdk: oraclejdk8
      before_script:
        - sudo apt-get install python3-pip
        - pip3 install --user -r requirements.txt
        - jdk_switcher use oraclejdk8
      script:
        - python3 src/main.py install version 28 --x86_64 --google-apis -v
        - python3 src/main.py list installed packages | grep android-28

#   TODO(ashishb): Make this work, for now, it just hangs.
#   For example, https://travis-ci.org/ashishb/android-sdk-enhanced/jobs/459599488
#  - name: Test update command
#      language: android
#      python:
#      - 3.7
#      sudo: required  # For pip installation, otherwise, pip install fails.
#      jdk: oraclejdk8
#      before_script:
#      - sudo apt-get install python3-pip
#      - pip3 install --user -r requirements.txt
#      - jdk_switcher use oraclejdk8
#      script:
#      - python3 src/main.py list installed packages
#      - touch ~/.android/repositories.cfg
#      - python3 src/main.py update all --verbose

    - name: Test list avds command
      language: java
      python:
        - 3.7
      sudo: required  # For pip installation, otherwise, pip install fails.
      jdk: oraclejdk8
      cache:
        directories:
          # Android SDK
          - $HOME/android-sdk-dl
          - $HOME/android-sdk
          # Android build cache (see http://tools.android.com/tech-docs/build-cache)
          - $HOME/.android/build-cache
      before_script:
        # Python
        - sudo apt-get install python3-pip
        - pip3 install --user -r requirements.txt
        - jdk_switcher use oraclejdk8
        - touch $HOME/.android/repositories.cfg
        # Android
        # Download and unzip the Android SDK tools (if not already there thanks to the cache mechanism)
        # Latest version available here: https://developer.android.com/studio/#command-tools
        - if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > $HOME/android-sdk-dl/sdk-tools.zip ; fi
        - unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d $HOME/android-sdk
        # Install or update Android SDK components (will not do anything if already up to date thanks to the cache mechanism)
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'tools' > /dev/null
      script:
        - touch $HOME/.android/repositories.cfg
        - export ANDROID_SDK_ROOT=$HOME/android-sdk
        - python3 src/main.py list avds --verbose

    - name:  Test create AVD API 24 command on JDK8
      language: java
      python:
        - 3.7
      sudo: required  # For pip installation, otherwise, pip install fails.
      jdk: oraclejdk8
      cache:
        directories:
          # Android SDK
          - $HOME/android-sdk-dl
          - $HOME/android-sdk
          # Android build cache (see http://tools.android.com/tech-docs/build-cache)
          - $HOME/.android/build-cache
      before_script:
        # Python
        - sudo apt-get install python3-pip
        - pip3 install --user -r requirements.txt
        - jdk_switcher use oraclejdk8
        - touch $HOME/.android/repositories.cfg
        # Android
        # Download and unzip the Android SDK tools (if not already there thanks to the cache mechanism)
        # Latest version available here: https://developer.android.com/studio/#command-tools
        - if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > $HOME/android-sdk-dl/sdk-tools.zip ; fi
        - unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d $HOME/android-sdk
        # Install or update Android SDK components (will not do anything if already up to date thanks to the cache mechanism)
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'tools' > /dev/null
      script:
        - set -e
        - touch $HOME/.android/repositories.cfg
        - export ANDROID_SDK_ROOT=$HOME/android-sdk
        - python3 src/main.py create avd test_avd1 24 --arm --google-apis
        - python3 src/main.py list installed packages
        - python3 src/main.py list avds
        - python3 src/main.py list avds | grep test_avd1

    - name: Test create AVD API 28 command on JDK8
      language: java
      python:
        - 3.7
      sudo: required  # For pip installation, otherwise, pip install fails.
      jdk: oraclejdk8
      cache:
        directories:
          # Android SDK
          - $HOME/android-sdk-dl
          - $HOME/android-sdk
          # Android build cache (see http://tools.android.com/tech-docs/build-cache)
          - $HOME/.android/build-cache
      before_script:
        # Python
        - sudo apt-get install python3-pip
        - pip3 install --user -r requirements.txt
        - jdk_switcher use oraclejdk8
        - touch $HOME/.android/repositories.cfg
        # Android
        # Download and unzip the Android SDK tools (if not already there thanks to the cache mechanism)
        # Latest version available here: https://developer.android.com/studio/#command-tools
        - if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > $HOME/android-sdk-dl/sdk-tools.zip ; fi
        - unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d $HOME/android-sdk
        # Install or update Android SDK components (will not do anything if already up to date thanks to the cache mechanism)
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'tools' > /dev/null
      script:
        - set -e
        - touch $HOME/.android/repositories.cfg
        - export ANDROID_SDK_ROOT=$HOME/android-sdk
        - python3 src/main.py create avd test_avd2 28 --x86 --no-google-apis
        - python3 src/main.py list installed packages
        - python3 src/main.py list avds
        - python3 src/main.py list avds | grep test_avd2

    - name: Test create AVD API 25 command on JDK8
      language: java
      python:
        - 3.7
      sudo: required  # For pip installation, otherwise, pip install fails.
      jdk: oraclejdk8
      cache:
        directories:
        # Android SDK
        - $HOME/android-sdk-dl
        - $HOME/android-sdk
        # Android build cache (see http://tools.android.com/tech-docs/build-cache)
        - $HOME/.android/build-cache
      before_script:
        # Python
        - sudo apt-get install python3-pip
        - pip3 install --user -r requirements.txt
        - jdk_switcher use oraclejdk8
        - touch $HOME/.android/repositories.cfg
        # Android
        # Download and unzip the Android SDK tools (if not already there thanks to the cache mechanism)
        # Latest version available here: https://developer.android.com/studio/#command-tools
        - if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > $HOME/android-sdk-dl/sdk-tools.zip ; fi
        - unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d $HOME/android-sdk
        # Install or update Android SDK components (will not do anything if already up to date thanks to the cache mechanism)
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'tools' > /dev/null
      script:
        - set -e
        - touch $HOME/.android/repositories.cfg
        - export ANDROID_SDK_ROOT=$HOME/android-sdk
        - python3 src/main.py list avds --verbose
        - python3 src/main.py create avd test_avd3 25
        - python3 src/main.py list installed packages
        - python3 src/main.py list avds
        - python3 src/main.py list avds | grep test_avd3
